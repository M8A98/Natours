
//colors
$color-primary:#7ed56f;
$color-primary-light:#55c57a;
$color-primary-dark:#28b485;
$color-gray-light-1:#f7f7f7;
$color-gray-light-2:#eee;

$color-gray-dark:#777;
$color-gray-dark-2:#999;
$color-gray-dark-3:#333;
$color-white:#fff;
$color-black:#000;

$color-secondary-light:#ffb900;
$color-secondary-dark:#ff7730;

$color-tertiary-light:#2998ff;
$color-tertiary-dark:#5643fa;


//---------- GRID
$grid-width:114rem;
$gutter-vertical:8rem;
$gutter-vertical-small:6rem;
$gutter-horizontal:6rem;

//--------- FONT
$default-font-size:1.6rem;

//Mixins

// 0-600 phone
//600-900 Tablet in portrait mode
//900 -1200 Tablet Landscape
//1200 - 1800 - Normal Desktop
//1800+ Big desktop


@mixin respond($breakpoint){
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) {@content}; //600px    Content adds the code that is in line 89 for instance. content allow you to use curly braces so that it is passed to the mixin.
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) {@content}; //900px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) {@content}; //1200px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) {@content}; //1800px
    }
}

@mixin clearfix { // If all the child elements are floated, then the height of the parent element becomes 0. Use this to fix it.
    &::after{
        content: "";
        display: table; //standard value of the mixin
        clear: both; //both margins
    }
} // The clearfix appends a pseudo element after the element, which will clear this float

@mixin absCenter{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
}

//MEDIA QUERY MANAGER



.u-margin-top-big{margin-top: 8rem;}
.u-margin-bottom-small{margin-bottom: 1.5rem;}
.u-margin-bottom-medium{margin-bottom: 4rem;}
.u-margin-bottom-big{margin-bottom: 8rem;}

*,
*::after,
*::before{ //All the after elements and before elements.
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}
html{
    font-size: 62.5%; // That way if the user 1 rem is 16px
    // the default is 16px; You cannot use rems in Windows 9
    @include respond(tab-land){
        font-size: 56.25%; //9px - 9/16
    }
    @include respond(tab-port){
        font-size: 50%; //8px - 8/16
    }
    @include respond(big-desktop){
        font-size: 75%; //12px - 12/16
    }
}
body{
    font-family: "Lato",sans-serif;
    font-weight: 400;
    line-height: 1.7;
    color: $color-gray-dark;
    padding: 3rem;
    box-sizing: border-box;
    @include respond(tab-port){
        padding: 0;
    }
}

::selection{
    background-color: $color-primary;
    color: $color-white;
}

.header{
    height: 85vh;
    background-image: linear-gradient(to right /*bottom*/,
    rgba($color-primary-light,0.8),
    rgba($color-primary-dark,0.8)),
    url("../img/hero-small.jpg");
    background-size: cover; /*whatever the viewport´s width, it will make the image fit.*/
    background-position: top; /*the top will always stay the same.*/
    -webkit-clip-path: polygon(0 0,100% 0,100% 75vh,0 100%);
    clip-path: polygon(0 0,100% 0,100% 75vh,0 100%); /*clockwise*/
    position: relative;

    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path:polygon(0 0)){
        -webkit-clip-path: polygon(0 0,100% 0,100% 75vh,0 100%);
        clip-path: polygon(0 0,100% 0,100% 75vh,0 100%);
        height: 95vh;
    }

    @media only screen and (min-resolution: 192dpi) and (min-width:37.5em),
        only screen and (-webkit-min-device-pixel-ratio:2) and (min-width:37.5em), //-webkit is for Safari !
        only screen and (min-width:125em){
        background-image: linear-gradient(to right /*bottom*/,
        rgba($color-primary-light,0.8),
        rgba($color-primary-dark,0.8)),
        url("../img/hero.jpg");
    }//192 because it´s the one that mac has.


    @include respond(phone){
        -webkit-clip-path: polygon(0 0,100% 0,100% 85vh,0 100%);
        clip-path: polygon(0 0,100% 0,100% 85vh,0 100%); /*clockwise*/
    }
    &__logo-box{
        position: absolute; /* & on this case, means .header*/
        top: 4rem;
        left: 4rem;     
    }
    &__logo{
        height: 3.5rem;
    }   
    
    &__text-box{
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%,-50%); /*related to current location (50% from width)*/
        text-align: center;
        .heading-primary{
            color: $color-white;
            text-transform: uppercase;
            -webkit-backface-visibility: hidden;
            margin-bottom: 6rem;
         &--main{
            display: block;
            font-size: 6rem;
            font-weight: 400;
            letter-spacing: 3.5rem;
            animation-name: moveInLeft;
            animation-duration: 1s;
            animation-timing-function: ease-out;
            /* animation-iteration-count: 3 ;*/
            /*  animation-delay: 3s;*/
            @include respond(phone){
                letter-spacing: 1rem;
                font-size: 5rem;
            }
         }   
         &--sub{
            display: block;
            font-size: 2rem;
            font-weight: 700;
            letter-spacing: 1.75rem;
            animation: moveInRight 1s ease-out;
            @include respond(phone){
                letter-spacing: .5rem;
            }
         }
        }
    }
}

/* only animate the transform and the opacity property */
@keyframes moveInLeft {
    0%{
        opacity: 0;
        transform: translateX(-10rem);
    }
    80%{
        transform: translateX(1rem);
    }
    100%{
        opacity: 1;
        transform: translate(0);
    }
}
@keyframes moveInRight {
    0%{
        opacity: 0;
        transform: translateX(10rem);
    }
    80%{
        transform: translateX(-1rem);
    }
    100%{
        opacity: 1;
        transform: translate(0);
    }
}

.btn{
    &, // The buttons do not have :link or :visited, so this selects the button itself.
    &:link,
    &:visited{
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        position: relative;
        font-size: $default-font-size;
        border: none;
        cursor: pointer;
    }
    &:hover{
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black,0.2);
    }
    &:active,
    &:focus{
        outline: none;
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black,0.2); /*The sense that the shadow is shorter. So the button is shorter.*/
    }
    &--white{
        background-color:$color-white;
        color: $color-gray-dark;
        &::after{
            background-color: $color-white;
        }
    }
    &--green{
        background-color:$color-primary-light;
        color: $color-white;
        &::after{
            background-color: $color-primary-light;
        }
    }

    &::after{
        content: "";
        display: inline-block; /*mandatory*/
        height: 100%;
        width: 100%;
        border-radius: 10rem;    
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all .4s;
    }
    &:hover::after{
        transform: scaleX(1.4) scaleY(1.6);
        opacity: 0;
    }
    &--animated{
        animation:moveInBottom .5s ease-out .75s; /*last parameter is delay*/
        animation-fill-mode: backwards; /*Automatically applies the styles of the 0% before the animation starts.*/
    }
}

@keyframes moveInBottom {
    0%{
        opacity: 0;
        transform: translateY(3rem); /*it moves from up to bottom*/
    }
    100%{
        opacity: 1;
        transform: translate(0);
    }
}


.row{
    max-width: $grid-width; //The standard. The difference between bax-width -> If we have enough available space, then it will have the width that we specified. If the viewport is smaller than what we specified, then it will fill 100%.
    //background-color: #eee;
    margin:0 auto; //Center block elements. When it´s auto, the browser figures out the margin that we wants the same amout of margin at the left and right.
    //gutter == space between of around the boxes.
    &:not(:last-child){ //Within () you can type another pseudo-class.
        margin-bottom: $gutter-vertical;
        @include respond(tab-port){
            margin-bottom: $gutter-vertical-small;
        }
    }
    @include respond(tab-port){
        max-width: 50rem;
       padding: 0 3rem; 
    }

    @include clearfix;

    //[alt="logo"] Will select the elements that have "logo" as value.

    [class^="col-"]{ //^ select the ones that start with. *= contains // $ ends with.
        //background-color: peru;
        float: left;
        &:not(:last-child){
            margin-right: $gutter-horizontal;
            @include respond(tab-port){
                margin-right: 0 !important;
            }
        }
        @include respond(tab-port){
            width: 100% !important;
        }
    }
    .col-1-of-2{
        width: calc((100% - #{$gutter-horizontal}) / 2); //If you use
        
    }
    .col-1-of-3{
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }
    .col-1-of-4{
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }
    .col-2-of-3{
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }
    .col-2-of-4{
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }
    .col-3-of-4{
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
}

.section-about{
    background-color: $color-gray-light-1;
    padding: 25rem 0;
    margin-top: -20vh;
    @include respond(tab-port){
        padding: 20rem 0;
    }
    >.u-center-text{text-align: center;}
    .u-margin-bottom-small{margin-bottom: 1.5rem;}
    .u-margin-bottom-medium{margin-bottom: 4rem;}
    .u-margin-bottom-big{margin-bottom: 8rem;}
    .heading-secondary{
        font-size: 3.5rem;
        text-transform: uppercase;
        font-weight: 700;
        background-image: linear-gradient(to right, $color-primary-light,$color-primary-dark);
        -webkit-background-clip: text; //works, now the letters are in front of it however. The image 
        color: transparent; // Now the clip will work
        display: inline-block;
        transition: all .2s;
        letter-spacing: 2px;
        @include respond(tab-port){
            font-size: 3rem;
        }
        @include respond(phone){
            font-size: 2.5rem;
        }
        &:hover{
            transform: skewY(2deg) skewX(15deg) scale(1.1);
            text-shadow: .5rem 1rem 2rem rgba($color-black,.2);
        }
    }
    .heading-tertiary{
        font-size: $default-font-size;
        font-weight: 700;
        text-transform: uppercase;
    }
    .paragraph{
        font-size: $default-font-size;
        &:not(:last-child){
            margin-bottom: 3rem;
        }
    }
    .btn-text{
        &:link,
        &:visited{
            font-size:$default-font-size;
            color: $color-primary;
            display: inline-block;
            text-decoration: none;
            border-bottom: 1px solid $color-primary;
            padding: 3px;
            transition: all .2s;
        }
        &:hover{
            background-color: $color-primary;
            color: $color-white;
            box-shadow: 0 1rem 2rem rgba($color-black, .15);
            transform: translateY(-2px);
        }
        &:active{
            box-shadow: 0 .5rem 2rem rgba($color-black, .15);
            transform: translateY(0);
        }
    }
}


.composition{
    position: relative;
    &__photo{
        width: 55%;
        box-shadow: 0 1.5rem 4rem rgba($color-black,.4,);
        border-radius: 2px;
        position: absolute; //Will make all the photos go to the left.
        z-index: 10; //Arbitrary
        transition: all .2s;
        outline-offset: 2rem; //space between border and element
        @include respond(tab-port){
            float: left;
            position: relative;
            width: 33.3333%;
            box-shadow: 0 1.5rem 3rem rgba($color-black,.2);
        }
        &--p1{
            left: 0;
            top: -2rem;
            @include respond(tab-port){
                top: 0;
                transform: scale(1.2);
            }
        }
        &--p2{
            right: 0; //Will start from the right
            top: 2rem;
            @include respond(tab-port){
                top: -1rem;
                transform: scale(1.3);
                z-index: 100;
            }
        }
        &--p3{
            left: 20%;
            top: 10rem;
            @include respond(tab-port){
                top: 1rem;
                left: 0;
                transform: scale(1.1);
            }
        }
        &:hover{
            outline: 1.5rem solid $color-primary; // it´s like the border
            transform: scale(1.05) translateY(-.5rem);
            box-shadow: 0 2.5rem 4rem rgba($color-black,.5); //The bigger the shadow, the closer it appears to the user.
            z-index: 20;
        }
    }
    &:hover &__photo:not(:hover){
        transform: scale(.95);
    }
}

.section-features{
    background-image: linear-gradient(to right /*bottom*/,
    rgba($color-primary-light,0.8),
    rgba($color-primary-dark,0.8)),
    url("../img/nat-4.jpg");
    background-size: cover;
    padding: 20rem 0;
    transform: skewY(-7deg);
    margin-top: -10rem;
    & > *{
        transform: skewY(7deg); 
    }
    @include respond(tab-port){
        padding: 10rem 0;
    }
    h3{
        text-transform: uppercase;
    }
    .feature-box{
        background-color: rgba($color-white,.8);
        font-size: 1.5rem;
        padding: 2.5rem;
        text-align: center;
        border-radius: 3px;
        box-shadow: 0 1.5rem 4rem rgba($color-black,.15);
        transition: transform .3s;
        @include respond(tab-port){
            padding: 2rem;
        }
        &__icon{
            font-size: 6rem; //To change the size of the icon.
            margin-bottom: .5rem;
            background-image: linear-gradient(to right, $color-primary-light,$color-primary-dark);
            -webkit-background-clip: text; //works, now the letters are in front of it however. The image 
            color: transparent; // Now the clip will work
            display: inline-block;
            @include respond(tab-port){
                margin-bottom: 0;
            }
        }
        &:hover{
            transform: translateY(-1.5rem) scale(1.03);
        }
    }
}

.section-tours{
    background-color: $color-gray-light-1;
    padding: 25rem 0 15rem 0;
    margin-top: -10rem;
    text-align: center;
    @include respond(tab-port){
        padding: 20rem 0 10rem 0;
    }
    .heading-secondary{
        font-size: 3.5rem;
        text-transform: uppercase;
        font-weight: 700;
        background-image: linear-gradient(to right, $color-primary-light,$color-primary-dark);
        -webkit-background-clip: text; //works, now the letters are in front of it however. The image 
        color: transparent; // Now the clip will work
        display: inline-block;
        margin-bottom: 8rem;
        transition: all .2s;
        letter-spacing: 2px;
        &:hover{
            transform: skewY(2deg) skewX(15deg) scale(1.1);
            text-shadow: .5rem 1rem 2rem rgba($color-black,.2);
        }
    }
}
.card{
    perspective: 150rem;
    -moz-perspective: 150rem;
    position: relative;
    height: 52rem;
    &__side{
        height: 52rem;
        transition: all .8s ease;
        color: white;
        font-size: 3rem;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        -webkit-backface-visibility: hidden; //hides the back-side of the card
        border-radius: 3px;
        overflow: hidden;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .15);
        &--front{
            background-color: $color-white;
        }
        &--back{
            background-color: #7ed56f;
            transform: rotateY(180deg);
            &-1{
                background-image: linear-gradient(to right bottom,$color-secondary-light,$color-secondary-dark);
            }
            &-2{
                background-image: linear-gradient(to right bottom,$color-primary-light,$color-primary-dark);
            }
            &-3{
                background-image: linear-gradient(to right bottom,$color-tertiary-light,$color-tertiary-dark);
            }
        }
    }
    &:hover &__side--front{ // If you want it to make it appear like the image is moving towards you, you need to change the perspective. It´s changed on the parent.
        transform: rotateY(-180deg);
    }
    &:hover &__side--back{
        transform:rotateY(0);
    }
    &__picture{
        background-size: cover;
        height: 23rem;
        background-blend-mode: screen; // Different effects for background-images
        -webkit-clip-path: polygon(0 0,100% 0,100% 85%, 0 100%);
        clip-path: polygon(0 0,100% 0,100% 85%, 0 100%);
        &--1{
            background-image: linear-gradient(to right bottom,$color-secondary-light,$color-secondary-dark),url(../img/nat-5.jpg);
        }
        &--2{
            background-image: linear-gradient(to right bottom,$color-primary-light,$color-primary-dark),url(../img/nat-6.jpg);
        }
        &--3{
            background-image: linear-gradient(to right bottom,$color-tertiary-light,$color-tertiary-dark),url(../img/nat-7.jpg);
        }
    }
    &__heading{
        font-size: 2.8rem;
        font-weight: 300;
        text-transform: uppercase;
        text-align: right;
        color: $color-white;
        position: absolute;
        top: 12rem;
        right: 2rem;
        width: 75%;
    }
    &__heading-span{
        padding: 1rem 1.5rem;
        -webkit-box-decoration-break: clone;
        box-decoration-break: clone;
        &--1{
            background-image: linear-gradient(to right bottom,
            rgba($color-secondary-light,.85),
            rgba($color-secondary-dark,.85));
        }
        &--2{
            background-image: linear-gradient(to right bottom,
            rgba($color-primary-light,.85),
            rgba($color-primary-dark,.85));
        }
        &--3{
            background-image: linear-gradient(to right bottom,
            rgba($color-tertiary-light,.85),
            rgba($color-tertiary-dark,.85));
        }
    }
    &__details{
        padding: 3rem;

        ul{
            list-style: none;
            width: 80%;
            margin: 0 auto;
            li{
                text-align: center;
                font-size: 1.5rem;
                padding: 1rem;
                color: $color-gray-dark;
                &:not(:last-of-type){
                    border-bottom: 1px solid $color-gray-light-2;
                }
            }
        }
    }
    &__cta{
        position: absolute;
        top: 50%;
        left: 50%;
        transform:translate(-50%,-50%);
        width: 90%;
        text-align: center;
    }
    &__price-box{
        text-align: center;
        color: $color-white;
        margin-bottom: 8rem;
    }
    &__price-only{
        font-size: 1.4rem;
        text-transform: uppercase;
    }
    &__price-value{
        font-size: 6rem;
        font-weight: 100;
    }
    //@include respond(tab-port){
        @media only screen and (max-width: 56.25em),
        only screen and (hover:none)/*(hover:hover) is the opposite*/{
        height: auto;
        border-radius: 3px;
        background-color: $color-white;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .15);
        .card-details{
            padding: 1rem 3rem;
        }
        &__side{
            height: auto;
            color: white;
            font-size: 3rem;
            position: relative;
            box-shadow: none;
            &--back{
                background-color: #7ed56f;
                transform: rotateY(0);
                clip-path: polygon(0 40%, 100% 0, 100% 100%, 0 100%);
            }
        }
        &:hover &__side--front{ // If you want it to make it appear like the image is moving towards you, you need to change the perspective. It´s changed on the parent.
            transform: rotateY(0);
        }
        &__cta{
            position: relative;
            top: 0;
            left: 0;
            transform:translate(0);
            width: 100%;
            padding: 7rem 4rem 4 4rem 4rem;
        }
        &__price-box{
            margin-bottom: 3rem;
        }
        &__price-only{
            font-size: 1.4rem;
            text-transform: uppercase;
        }
        &__price-value{
            font-size: 4rem;
        }
    }
}

.section-stories{
    padding: 15rem 0;
    position: relative;
    @include respond(tab-port){
        padding: 10rem 0;
    }
    .story{
        width: 75%;
        margin: 0 auto;
        box-shadow: 0 3rem 6rem grba($color-black,.1);
        background-color: rgba($color-white,.6);
        border-radius: 3px;
        padding: 6rem;
        padding-left: 9rem;
        font-size: $default-font-size;
        transform: skewX(-12deg);
        @include respond(tab-port){
            width: 100%;
            padding: 4rem;
            padding-left: 7rem;
        }
        @include respond(phone){
            transform: skew(0);
        }
        &__shape{
            width: 15rem;
            height: 15rem;
            float: left;
            transform: translateX(-3rem) skewX(12deg);
            position: relative;
            overflow: hidden;
            border-radius: 50%;
            @supports (clip-path: polygon(0 0)) or (-webkit-clip-path:polygon(0 0)){
                -webkit-clip-path: circle(50% at 50% 50%);
                clip-path: circle(50% at 50% 50%); // If an element is floated and you want ot move it, use transform.
                -webkit-shape-outside: circle(50% at 50% 50%);
                shape-outside: circle(50% at 50% 50%); //You need float to make this work and defined dimensions. (radius if 50%, then the circle will be half the width and height. So 7.5 rem., the center of the circle.)
                border-radius: none;
            }

            @include respond(phone){
                transform: skewX(0) translateX(-3rem);
            }
        }
        &__image{
            height: 100%; //Because of the parent element. In order to make images responsive, they need to have dimensions, at least one. ALWAYS
            transform: translateX(-4rem) scale(1.4);
            transition: all .5s;
            -webkit-backface-visibility: hidden;
        }
        &__text{
            transform: skewX(12deg); 
            @include respond(phone){
                transform: skewX(0);
            }
        }
        &__caption{
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, 0%);
            color: $color-white;
            text-transform: uppercase;
            font-size: 1.7rem;
            text-align: center;
            opacity: 0;
            transition: all .5s;
            -webkit-backface-visibility: hidden;
        }
    }
}
.story:hover .story__caption{
    opacity: 1;
    transform: translate(-50%,-50%);
}
.story:hover .story__image{
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%);
}


//------------------------------- Errors
.heading-secondary--problem{
    font-size: 3.5rem;
    position: relative;
    left: 50%;
    transform: translateX(-50%);
    text-transform: uppercase;
    font-weight: 700;
    background-image: linear-gradient(to right, $color-primary-light,$color-primary-dark);
    -webkit-background-clip: text; //works, now the letters are in front of it however. The image 
    color: transparent; // Now the clip will work
    display: inline-block;
    text-align: center;
    transition: all .2s;
    letter-spacing: 2px;
    &:hover{
        transform: skewY(2deg) skewX(15deg) scale(1.1) translateX(-50%);
        text-shadow: .5rem 1rem 2rem rgba($color-black,.2);
    }
}

.btn-text{
    &:link,
    &:visited{
        font-size:$default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;
        transition: all .2s;
        position: relative;
        left: 45%;
    }
    &:hover{
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(-2px);
    }
    &:active{
        box-shadow: 0 .5rem 2rem rgba($color-black, .15);
        transform: translateY(0);
    }
}
//----------------------------------



.bg-video{
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    z-index: -1;
    opacity: .15;
    overflow: hidden;
    &__content{
        height: 100%;
        width: 100%;
        object-fit: cover; // similar to background-size:cover; Will clip what exceeds the parent element Maintains aspect ratio. You could also put the value of fill but the aspect ratio would be lost.
    }
}

.section-book{
   padding:15rem 0;
   background-image: linear-gradient(to right bottom,$color-primary-light,$color-primary-dark); 
}
.book{
    background-image: linear-gradient(105deg,rgba($color-white,.9) 0%,
                                      rgba($color-white,.9) 50%,
                                    transparent 50%),url(../img/nat-10.jpg); // If they are at the same number, there is no gradient.
    background-size: cover; // You could use 100% as well.
    box-shadow: 0 1.5rem 4rem rgba($color-black,.15);

    @include respond(tab-land){
        background-image: linear-gradient(105deg,
                                    rgba($color-white,.9) 0%,
                                    rgba($color-white,.9) 70%,
                                    transparent 70%),
                                    url(../img/nat-10.jpg);
        background-size: cover;                                    
    }
    @include respond(tab-port){
        background-image: linear-gradient(to right,
                                    rgba($color-white,.9) 0%,
                                    rgba($color-white,.9) 100%),
                                    url(../img/nat-10.jpg);
    }
    &__form{
        width: 50%;
        padding:6rem;
        @include respond(tab-land){
            width: 70%;
        }
        @include respond(tab-port){
            width: 100%;
        }
    }
    .heading-secondary{
        font-size: 3.5rem;
        text-transform: uppercase;
        font-weight: 700;
        background-image: linear-gradient(to right, $color-primary-light,$color-primary-dark);
        -webkit-background-clip: text; //works, now the letters are in front of it however. The image 
        color: transparent; // Now the clip will work
        display: inline-block;
        text-align: center;
        transition: all .2s;
        letter-spacing: 2px;
        &:hover{
            transform: skewY(2deg) skewX(15deg) scale(1.1);
            text-shadow: .5rem 1rem 2rem rgba($color-black,.2);
        }
    }
}

.form{
    position: relative;
    &__group{
        position: relative;
        top: -3rem;
    }
    &__group:not(:last-child){
        margin-bottom: 2rem;
    }
    &__input{
        font-size: 1.5rem;
        color: inherit;
        font-family: inherit;
        padding:1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white,.5);
        border:none;
        border-bottom: 3px solid transparent; // Essential avoid unexpected movement from the bottom one.
        width: 90%;
        display: block;
        transition: all .3s;
        @include respond(tab-port){
            width: 100%;
        }
        &:focus{
            outline: none;
            box-shadow: 0 1rem 2rem rgba($color-black,0.1);
            border-bottom: 3px solid $color-primary;
        }
        &:focus:invalid{
            border-bottom: 3px solid $color-secondary-dark;
        }
        &::-webkit-input-placeholder{
            color: $color-gray-dark-2;
        }
    }
    &__input:placeholder-shown + &__label{
        opacity: 0; //Still will be in the place.
        visibility: hidden; // The element is gone. We cannot animate visibility but we can animate the opacity.
        transform: translateY(-4rem);
    }
    &__label{
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        display: block;
        transition: all .4s;
    }
    &__radio-group{
        width: 49%;
        display: inline-block;
        @include respond(tab-port){
            width: 100%;
            margin-bottom: 2rem;
        }
    }
    &__radio-input{
        display: none;
    }
    &__radio-label{
        font-size: $default-font-size;
        cursor: pointer;
        position: relative;
        padding-left: 4.5rem;
    }
    &__radio-button{
        height: 3rem;
        width: 3rem;
        border:5px solid $color-primary;
        border-radius: 50%;
        display: inline-block;
        position: absolute;
        left: 0;
        top: -.4rem;
        &::after{
            content: "";
            display: block;
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%,-50%);
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s ;
        }
    }
    &__radio-input:checked ~ &__radio-label &__radio-button::after{
        opacity: 1;
    }
}

.footer{
    background-color: $color-gray-dark-3;
    padding:10rem 0;
    font-size: 1.4rem;
    @include respond(tab-port){
        padding: 8rem 0;
    }
    &__logo-box {
        text-align: center;
        margin-bottom: 8rem;
        @include respond(tab-port){
            margin-bottom: 6rem;
        }
    }
    &__logo{
        width: 15rem;
        height: auto;
    }
    &__navigation{
        border-top: 1px solid $color-gray-light-2;
        padding-top:2rem;
        display: inline-block; //So that the border only cover the elements. Not the entire width.
        @include respond(tab-port){
            width: 100%;
            text-align: center;
        }
    }
    &__list{
        list-style: none;
    }
    &__item{
        display: inline-block;
        &:not(:last-child){
            margin-right: .5rem;
        }
    }
    &__link{
        &:link,
        &:visited{
            color: $color-gray-light-1;
            background-color: $color-gray-dark-3;
            text-decoration: none;
            text-transform: uppercase;
            display:inline-block;
            transition: all .2s;
        }
        &:hover,
        &:active{
            color:$color-primary;
            box-shadow: 0 1rem 2rem rgba($color-black,.4);
            transform: rotate(5deg) scale(1.3);
        }
    }
    &__copyright{
        color: $color-gray-light-1;
        border-top: 1px solid $color-gray-light-2;
        padding-top:2rem;
        width: 80%;
        float: right;
        @include respond(tab-port){
            width: 100%;
            float: none;
        }
    }
}

.navigation{
    &__checkbox{
        display: none;
    }
    &__button{
        background-color: $color-white;
        height: 7rem;
        width: 7rem;
        position: fixed;
        top: 6rem;
        right: 6rem;
        border-radius: 50%;
        z-index: 2000;
        box-shadow: 0 1rem 3rem rgba($color-black,.1);
        text-align: center;
        cursor: pointer;
        @include respond(tab-port){
            top: 4rem;
            right: 4rem;
        }
        @include respond(phone){
            top: 3rem;
            right: 3rem;
        }
    }
    &__background{
        height: 6rem;
        width: 6rem;
        border-radius: 50%;
        position: fixed;
        top: 6.5rem;
        right: 6.5rem;
        background-image: radial-gradient($color-primary-light,$color-primary-dark);
        z-index: 1000; 
        transition: transform .8s cubic-bezier(0.86,0,0.07,1);
        @include respond(tab-port){
            top: 4.5rem;
            right: 4.5rem;
        }
        @include respond(phone){
            top: 3.5rem;
            right: 3.5rem;
        }
    }
    &__nav{
        height: 100vh;
        position: fixed;
        top:0;
        left: 0;
        z-index: 1500;
        opacity: 0;
        width: 0; // This is what makes the animation happen.
        transition: all .8s cubic-bezier(0.68,-0.55,0.265,1.55);
    }
    &__list{
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
        list-style: none;
        text-align: center;
        width: 100%;
    }
    &__item{
        margin:1rem;
    }
    &__link{
        &:link,
        &:visited{
        font-size: 3rem;
        font-weight: 300;
        padding:1rem 2rem;
        color: $color-white;
        text-decoration: none;
        text-transform: uppercase;
        background-image: linear-gradient(120deg,transparent 0%,transparent 50%, $color-white 50%);
        background-size: 220%;
        transition: all .2s;
        display: inline-block;
        }
        &:active,
        &:hover{
            background-position: 100%;
            color: $color-primary;
            transform: translateX(1rem);
        }
        span{
            margin-right: 1.5rem;
        }
    }
    &__checkbox:checked ~ &__background{
        transform: scale(100);
    }
    &__checkbox:checked ~ &__nav{
        opacity: 1;
        width: 100%;
    }

    //ICON
    &__icon{
        position: relative;
        margin-top: 3.5rem;
        &,
        &::before,
        &::after{
            width: 3rem;
            height: 2px;
            background-color: $color-gray-dark-3;
            display: inline-block;
        }
        &::before,
        &::after{
            content: "";
            position: absolute;
            left: 0;
            transition: all .2s;
        }
        &::before{
            top: -.8rem;
        }
        &::after{
            top: .8rem;
        }
        
    }
    &__button:hover &__icon::before{
        top: -1rem;
    }
    &__button:hover &__icon::after{
        top: 1rem;
    }
    &__checkbox:checked + &__button &__icon{
        background-color: transparent;
    }
    &__checkbox:checked + &__button &__icon::before{
        top: 0;
        transform: rotate(135deg);
    }
    &__checkbox:checked + &__button &__icon::after{
        top: 0;
        transform: rotate(-135deg);
    }
}

.popup{
    height: 100vh;
    width: 100vw;
    position: fixed;
    top:0;
    left: 0;
    background-color: rgba($color-black,.8);
    z-index: 5000;
    opacity: 0;
    visibility: hidden;
    transition: all .3s;

    @supports (backdrop-filter: blur(10px)) or (--webkit-backdrop-filter: blur(10px)){
        backdrop-filter: blur(10px);
        --webkit-backdrop-filter: blur(10px);
        background-color: rgba($color-black,.3);
    }
    &:target{
        opacity: 1;
        visibility: visible;
    }
    &__content{
        @include absCenter;
        width: 75%;
        background-color: $color-white;
        box-shadow: 0 2rem 4rem rgba($color-black,0.2);
        border-radius: 3px;
        display: table;
        overflow: hidden;
        opacity: 0;
        transform: translate(-50%,-50%) scale(.25);
        transition: all .5s .2s;
    }
    &__left{
        width: 33.33333%;
        display: table-cell;
        @include respond(phone){
            width: 100%;
            display: block;
        }
    }
    &__right{
        width: 66.6666667%;
        display: table-cell;
        vertical-align: middle;
        padding: 3rem 5rem;
        @include respond(phone){
            width: 100%;
            display: block;
        }
    }
    &__img{
        display: block;
        width: 50%;
        float: left;
    }
    &__img2{
        height: 90%;
    }
    &__text{
        font-size: 1.4rem;
        margin-bottom: 4rem;

        -moz-column-count: 2;
        -moz-column-gap: 4rem;
        -moz-column-rule:1px solid $color-gray-light-2;

        column-count: 2;
        column-gap: 4rem;
        column-rule:1px solid $color-gray-light-2;

        -moz-hyphens: auto;
        -ms-hyphens: auto;
        -webkit-hyphens: auto;
        hyphens: auto;

        @include respond(phone){
            column-count: 1;
            font-size: 1.5rem;
        }

    }
    .anchor__close{
        &:link,
        &:visited{
            line-height: 1;
            color: $color-gray-dark-3;
            position: absolute;
            top: 2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            transition: all .2s;
        }
    }
    .anchor__close:hover{
        color: $color-primary;
    }
    &:target &__content{
        opacity: 1;
        transform:translate(-50%,-50%) scale(1);
    }
}
.section-features .col-1-of-4 {
    @include respond(tab-port){margin-bottom: 2rem;}
}

.section-tours .col-1-of-3{
    @include respond(tab-port){
        margin-bottom: 2rem;
    }
    a {
        @include respond(tab-land){
            bottom: 10px;
        }
    }
}

/*

1.- You cannot apply two transform properties at the same time.

2.- The problem with the secondary-heading is because of the point 1. There can´t be two transforms.

3.- When something weird happens, use backface-visibility.

4.- filter: blur(3px) brightness(80%); If brightness is less than 100%, then it´s darker. If higher, brighter.

5.- Background-size is what makes the image multiply itself if needed or in case of cover, it will cover 100%. You can use % as well

6.- Line 666, transparent is a "color" and means the absence of any color.

7.- The input elements do not inherit, you need to do it manually.

8.- If you add a border-bottom to the input while it´s focused, also add it to its initial state and set it to transparent because of thr box-sizing.

9.- &:focus:invalid{} If it´s focused and it´s invalid, then...

10.- &__input:placeholder-shown + &__label{} When the placeholder is there, so no input.

11.- Line 723, you only needed to translate it upwards because once you do that, it will work downwards as well.

12.- In CSS we cannot alter the radio buttons, so you need to create them yourself.

13.- &nbsp; means white space.

14.- background-image: radial-gradient($color-primary-light,$color-primary-dark); Just like linear gradient but it starts in the middle and goes to all directions.

15.-  z-index requires position defined to work

16.- background-position:top right; helps positioning an image.

17.- opacity:0; and width:0; for the navigation

18.- transform-origin:right; changes where the rotation will start. The center of rotation. If you don´t specify it, it will be the center.

19.- The anchors have target.

20.- :target -> when the element is the target.

21.- srcset attribute allows the browser to select the image that fits the best depending on the users screen.
*/